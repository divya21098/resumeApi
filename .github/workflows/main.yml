name: 'Terraform to deploy infrastructure'

on:
  push:
    paths-ignore:
      - 'README.md'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./infra
    
    env:
      AWS_REGION: us-west-1
      DYNAMODB_TABLE: Movies-API
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        run: terraform validate -no-color
      - name: Terraform Destroy
        run: terraform destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
      - name: Terraform Plan
        run: terraform plan -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      
      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve -no-color
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: List Files
        run: |
          echo "Current Directory:"
          ls -al
          
      - name: Load Data to DynamoDB
        run: |
          python3 <<EOF
          import boto3
          import json
          import os

          dynamodb = boto3.resource('dynamodb', region_name='${{ env.AWS_REGION }}')
          table = dynamodb.Table('${{ env.DYNAMODB_TABLE }}')
          file_path = os.path.join('infra', 'movie.json')

          with open('movie.json', 'r') as file:
              movies = json.load(file)

          with table.batch_writer() as batch:
              for movie in movies:
                  if 'title' in movie:
                      batch.put_item(Item=movie)

          print("Data successfully loaded to DynamoDB")
          EOF
